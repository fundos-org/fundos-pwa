{"ast":null,"code":"var _jsxFileName = \"/home/manish/Downloads/fundos-android/live_fund_os_pwa/fundos-pwa/src/components/Notification.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Notification = ({\n  message,\n  type,\n  duration = 4000,\n  onClose\n}) => {\n  _s();\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onClose();\n    }, duration);\n    return () => clearTimeout(timer);\n  }, [duration, onClose]);\n  const getStyles = () => {\n    const baseStyles = {\n      position: 'fixed',\n      top: '20px',\n      left: '50%',\n      transform: 'translateX(-50%)',\n      minWidth: '300px',\n      maxWidth: '90vw',\n      padding: '16px 20px',\n      borderRadius: '8px',\n      color: 'white',\n      fontSize: '14px',\n      fontWeight: '500',\n      zIndex: 9999,\n      boxShadow: '0 4px 12px rgba(0, 0, 0, 0.3)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      animation: 'slideInFromTop 0.3s ease-out'\n    };\n    const typeStyles = {\n      success: {\n        backgroundColor: '#00fb57',\n        color: '#1a1a1a'\n      },\n      error: {\n        backgroundColor: '#fd8888',\n        color: '#fff'\n      },\n      info: {\n        backgroundColor: '#546881',\n        color: '#fff'\n      }\n    };\n    return {\n      ...baseStyles,\n      ...typeStyles[type]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          @keyframes slideInFromTop {\n            from {\n              opacity: 0;\n              transform: translateX(-50%) translateY(-20px);\n            }\n            to {\n              opacity: 1;\n              transform: translateX(-50%) translateY(0);\n            }\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: getStyles(),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          flex: 1\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        style: {\n          background: 'transparent',\n          border: 'none',\n          color: 'inherit',\n          fontSize: '18px',\n          cursor: 'pointer',\n          marginLeft: '10px',\n          padding: '0',\n          width: '20px',\n          height: '20px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n// Notification Manager Hook\n_s(Notification, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Notification;\nexport const useNotification = () => {\n  _s2();\n  const [notifications, setNotifications] = useState([]);\n  const showNotification = (message, type = 'info') => {\n    const id = Date.now().toString();\n    setNotifications(prev => [...prev, {\n      id,\n      message,\n      type\n    }]);\n  };\n  const removeNotification = id => {\n    setNotifications(prev => prev.filter(n => n.id !== id));\n  };\n  const NotificationContainer = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: notifications.map(notification => /*#__PURE__*/_jsxDEV(Notification, {\n      message: notification.message,\n      type: notification.type,\n      onClose: () => removeNotification(notification.id)\n    }, notification.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n  return {\n    showNotification,\n    NotificationContainer\n  };\n};\n_s2(useNotification, \"/HH3zTd3BUNOgnlhD79kguSWbWM=\");\nexport default Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Notification","message","type","duration","onClose","_s","timer","setTimeout","clearTimeout","getStyles","baseStyles","position","top","left","transform","minWidth","maxWidth","padding","borderRadius","color","fontSize","fontWeight","zIndex","boxShadow","display","alignItems","justifyContent","animation","typeStyles","success","backgroundColor","error","info","children","fileName","_jsxFileName","lineNumber","columnNumber","style","flex","onClick","background","border","cursor","marginLeft","width","height","_c","useNotification","_s2","notifications","setNotifications","showNotification","id","Date","now","toString","prev","removeNotification","filter","n","NotificationContainer","map","notification","$RefreshReg$"],"sources":["/home/manish/Downloads/fundos-android/live_fund_os_pwa/fundos-pwa/src/components/Notification.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\ninterface NotificationProps {\n  message: string;\n  type: 'success' | 'error' | 'info';\n  duration?: number;\n  onClose: () => void;\n}\n\nconst Notification: React.FC<NotificationProps> = ({\n  message,\n  type,\n  duration = 4000,\n  onClose\n}) => {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onClose();\n    }, duration);\n\n    return () => clearTimeout(timer);\n  }, [duration, onClose]);\n\n  const getStyles = () => {\n    const baseStyles = {\n      position: 'fixed' as const,\n      top: '20px',\n      left: '50%',\n      transform: 'translateX(-50%)',\n      minWidth: '300px',\n      maxWidth: '90vw',\n      padding: '16px 20px',\n      borderRadius: '8px',\n      color: 'white',\n      fontSize: '14px',\n      fontWeight: '500',\n      zIndex: 9999,\n      boxShadow: '0 4px 12px rgba(0, 0, 0, 0.3)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      animation: 'slideInFromTop 0.3s ease-out',\n    };\n\n    const typeStyles = {\n      success: { backgroundColor: '#00fb57', color: '#1a1a1a' },\n      error: { backgroundColor: '#fd8888', color: '#fff' },\n      info: { backgroundColor: '#546881', color: '#fff' }\n    };\n\n    return { ...baseStyles, ...typeStyles[type] };\n  };\n\n  return (\n    <>\n      <style>\n        {`\n          @keyframes slideInFromTop {\n            from {\n              opacity: 0;\n              transform: translateX(-50%) translateY(-20px);\n            }\n            to {\n              opacity: 1;\n              transform: translateX(-50%) translateY(0);\n            }\n          }\n        `}\n      </style>\n      <div style={getStyles()}>\n        <span style={{ flex: 1 }}>{message}</span>\n        <button\n          onClick={onClose}\n          style={{\n            background: 'transparent',\n            border: 'none',\n            color: 'inherit',\n            fontSize: '18px',\n            cursor: 'pointer',\n            marginLeft: '10px',\n            padding: '0',\n            width: '20px',\n            height: '20px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }}\n        >\n          Ã—\n        </button>\n      </div>\n    </>\n  );\n};\n\n// Notification Manager Hook\nexport const useNotification = () => {\n  const [notifications, setNotifications] = useState<Array<{\n    id: string;\n    message: string;\n    type: 'success' | 'error' | 'info';\n  }>>([]);\n\n  const showNotification = (message: string, type: 'success' | 'error' | 'info' = 'info') => {\n    const id = Date.now().toString();\n    setNotifications(prev => [...prev, { id, message, type }]);\n  };\n\n  const removeNotification = (id: string) => {\n    setNotifications(prev => prev.filter(n => n.id !== id));\n  };\n\n  const NotificationContainer = () => (\n    <>\n      {notifications.map((notification) => (\n        <Notification\n          key={notification.id}\n          message={notification.message}\n          type={notification.type}\n          onClose={() => removeNotification(notification.id)}\n        />\n      ))}\n    </>\n  );\n\n  return {\n    showNotification,\n    NotificationContainer\n  };\n};\n\nexport default Notification; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}